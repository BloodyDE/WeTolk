from pathlib import Path
import os
import environ

# --- Basispfade zuerst ---
BASE_DIR = Path(__file__).resolve().parent.parent

# --- .env laden ---
env = environ.Env(
    DEBUG=(bool, False),
)
environ.Env.read_env(BASE_DIR / ".env")  # liest .env, falls vorhanden

"""
Django settings for ticket_system project.
Generated by 'django-admin startproject' using Django 5.2.4.
"""

# --- Core aus .env ---
SECRET_KEY = env("SECRET_KEY", default="!!!SET_ME_IN_.env_ONLY_FOR_DEV!!!")
DEBUG = env.bool("DEBUG", default=True)
ALLOWED_HOSTS = ["*"]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tickets',
    'widget_tweaks',
    'WeConvert',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ticket_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates' ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ticket_system.wsgi.application'

# --- Datenbank ---
# Nutzt DATABASE_URL aus .env (z. B. postgres://...), sonst SQLite
DATABASES = {
    "default": env.db(default=f"sqlite:///{BASE_DIR / 'db.sqlite3'}")
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static & Media
STATICFILES_DIRS = [ BASE_DIR / "static" ]
STATIC_URL = 'static/'
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- Eigene Settings aus .env ---
DOWNLOAD_PASSWORD = env("DOWNLOAD_PASSWORD", default=None)
raw_db_path = env("DOWNLOAD_DB_PATH", default=str(BASE_DIR / "db.sqlite3"))
from pathlib import Path as _P
DOWNLOAD_DB_PATH = Path(env("DOWNLOAD_DB_PATH", default=str(BASE_DIR / "db.sqlite3")))